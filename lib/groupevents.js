//Give Me Credit If Using This File Give Me Credit On Your Channel ‚úÖ 
//https://whatsapp.com/channel/0029VbAdcIXJP216dKW1253g
// Credits DybyTech - MEGALODON-MD üíú 

const { isJidGroup } = require('@whiskeysockets/baileys');
const config = require('../config');

const getContextInfo = (m) => ({
    mentionedJid: [m.sender],
    forwardingScore: 999,
    isForwarded: true,
    forwardedNewsletterMessageInfo: {
        newsletterJid: '120363401605001369@newsletter',
        newsletterName: '…¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö',
        serverMessageId: 143,
    },
});

const fallbackPP = 'https://i.ibb.co/KhYC4FY/1221bc0bdd2354b42b293317ff2adbcf-icon.png';

const GroupEvents = async (conn, update) => {
    try {
        if (!isJidGroup(update.id) || !Array.isArray(update.participants)) return;

        const metadata = await conn.groupMetadata(update.id);
        const participants = update.participants;
        const desc = metadata.desc || "No Description.";
        const groupMembersCount = metadata.participants.length;

        for (const num of participants) {
            const userName = num.split("@")[0];
            const timestamp = new Date().toLocaleString();

            let userPp;
            try {
                userPp = await conn.profilePictureUrl(num, 'image');
            } catch {
                userPp = fallbackPP;
            }

            if (update.action === "add" && config.WELCOME === "true") {
                const text = `> *‚ï≠‚îÄ„Äî …¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö „Äï‚îÄ‚ïÆ*
> | üëã ùñçùñäùñû @${userName}
> | üè† ùñúùñäùñëùñàùñîùñíùñä ùñôùñî *${metadata.subject}*
> | üî¢ ùñíùñäùñíùñáùñäùñó #${groupMembersCount}
> | üïí ùñèùñîùñéùñìùñäùñâ ùñîùñì: *${timestamp}*
> *‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ*
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥Ä·¥Ä Ä·¥Ä ·¥õ·¥á·¥Ñ ú*`;

                await conn.sendMessage(update.id, {
                    image: { url: userPp },
                    caption: text,
                    mentions: [num],
                    contextInfo: getContextInfo({ sender: num }),
                });

            } else if (update.action === "remove" && config.WELCOME === "true") {
                const text = `> *‚ï≠‚îÄ„Äî …¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö „Äï‚îÄ‚ïÆ*
> | üò¢ ùñåùñîùñîùñâùñáùñûùñä, @${userName}
> | üö™ ùñûùñîùñö ùñëùñäùñãùñô ùñôùñçùñä ùñåùñóùñîùñöùñï.
> | üïí ùñôùñéùñíùñä: *${timestamp}*
> | üë• ùñìùñîùñú *${groupMembersCount}* ùñíùñäùñíùñáùñäùñóùñò ùñóùñäùñíùñÜùñéùñì.
> *‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ*

> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥Ä·¥Ä Ä·¥Ä ·¥õ·¥á·¥Ñ ú*`;

                await conn.sendMessage(update.id, {
                    image: { url: userPp },
                    caption: text,
                    mentions: [num],
                    contextInfo: getContextInfo({ sender: num }),
                });

            } else if (update.action === "demote" && config.WELCOME === "true") {
                const demoter = update.author.split("@")[0];
                const text = `> ‚ï≠‚îÄ„Äî ‚õî ùñâùñäùñíùñîùñôùñä ùñìùñîùñôùñéùñàùñä „Äï‚îÄ‚ïÆ
> | üîª @${demoter} ùñâùñäùñíùñîùñôùñäùñâ @${userName}
> | üïí ùñôùñéùñíùñä: *${timestamp}*
> | üìõ ùñåùñóùñîùñöùñï: *${metadata.subject}*
> ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ„Äò ‚öôÔ∏è ùñìùñîùñôùñéùñãùñû ùñòùñûùñòùñôùñäùñí ‚öôÔ∏è „Äô‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
`;

                await conn.sendMessage(update.id, {
                    image: { url: userPp },
                    caption: text,
                    mentions: [update.author, num],
                    contextInfo: getContextInfo({ sender: update.author }),
                });

            } else if (update.action === "promote" && config.WELCOME === "true") {
                const promoter = update.author.split("@")[0];
                const text = `> ‚ï≠‚îÅ ·¥ò Ä·¥è·¥ç·¥è·¥õ…™·¥è…¥ ·¥Ä ü·¥á Ä·¥õ ‚îÅ‚îÅ‚ïÆ
> | ü§ñ *@${promoter}* ·¥ä·¥ús·¥õ ·¥ò Ä·¥è·¥ç·¥è·¥õ·¥á·¥Ö *@${userName}*
> | üïì *·¥õ…™·¥ç·¥á:* ${timestamp}
> | üè∑Ô∏è *…¢ Ä·¥è·¥ú·¥ò:* ${metadata.subject}
> ‚ï∞‚îÅ‚îÅ‚ùñ …¢·¥Ä·¥Ä Ä·¥Ä-x·¥ç·¥Ö ‚ùñ‚îÅ‚îÅ‚ïØ
`;

                await conn.sendMessage(update.id, {
                    image: { url: userPp },
                    caption: text,
                    mentions: [update.author, num],
                    contextInfo: getContextInfo({ sender: update.author }),
                });
            }
        }
    } catch (err) {
        console.error('Group event error:', err);
    }
};

module.exports = GroupEvents;

const { cmd } = require('../command');
const { runtime } = require('../lib/functions');
const config = require('../config');

cmd({
    pattern: "uptime",
    alias: ["runtime", "run"],
    desc: "Afficher le temps de fonctionnement du bot avec des formats styl√©s",
    category: "main",
    react: "‚è±Ô∏è",
    filename: __filename
},
async (conn, mek, m, { from, reply }) => {
    try {
        const uptime = runtime(process.uptime());
        const startTime = new Date(Date.now() - process.uptime() * 1000);
        
        // Style 1: Box classique en *fancy small caps*
        const style1 = `‚ï≠‚îÄ‚îÄ‚îÄ„Äé …¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö ·¥ú·¥ò·¥õ…™·¥ç·¥á „Äè‚îÄ‚îÄ‚îÄ‚≥π
‚îÇ
‚îÇ ‚è±Ô∏è ${uptime}
‚îÇ
‚îÇ üöÄ D√©marr√©: ${startTime.toLocaleString()}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≥π
> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö*`;

        // Style 2: Style social media en *fancy small caps*
        const style2 = `‚è±Ô∏è *·¥ú·¥ò·¥õ…™·¥ç·¥á  Ä·¥á·¥ò·¥è Ä·¥õ* ‚è±Ô∏è

üü¢ En ligne depuis: ${uptime}
üìÖ Depuis: ${startTime.toLocaleString()}


> *·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è …¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö*`;

        const styles = [style1, style2];
        const selectedStyle = styles[Math.floor(Math.random() * styles.length)];

        await conn.sendMessage(from, { 
            text: selectedStyle,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363401605001369@newsletter',
                    newsletterName: '…¢·¥Ä·¥Ä Ä·¥Ä x·¥ç·¥Ö',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error("Uptime Error:", e);
        reply(`‚ùå Erreur: ${e.message}`);
    }
});
